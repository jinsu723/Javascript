// 6번 : 배열 실습
// 1. 학생의 정보를 저장하는 객체를 만들고 그 학생의 정보를 출력하기
//  학생 정보 : 이름, 나이, 성적(1과목)
// 1) 객체에 최소 3명의 데이터를 추가하고 이름과 성적 출력하기

class Student{
  constructor(name, age, grade){
    this.name = name;
    this.age = age;
    this.grade = grade;
  }
}

stu1 = new Student('길진수', 20, 'A');
stu2 = new Student('진수길', 21, 'B');
stu3 = new Student('수길진', 22, 'C');

const students = [stu1, stu2, stu3];

students.forEach(student => {
  console.log(student);
})


// 2) 객체에서 이름 키에 해당하는 값들만 출력하기
students.forEach(student => {
  console.log('이름 : ' + student.name);
})

// 3) 객체에 새로운 속성(학년)을 추가하고 객체 전체 출력하기(for문 실행)
for(let key in students){
  students[key].g = '1학년';
}

for(let key in students){
  console.log(students[key]);
}

// //방법2) 생성자 함수 사용
// function Students2(name, age, score){
//   this.name = name;
//   this.age = age;
//   this.score = score;
// }

// //학생 객체 생성
// const student4 = new Students1("짱구", 5, 85);
// const student5 = new Students1("철수", 5, 90);
// const student6 = new Students1("유리", 5, 100);


// //방법3) 객체 리터럴 바로 사용
// const students3 = {
//   student1 : {name : '짱구', age : 5, score:90},
//   student2 : {name : '철수', age : 5, score:100},
//   student3 : {name : '유리', age : 5, score:88},
// };


// 2. 배열의 모든 요소를 2배로 증가시켜 새로운 배열을 만들어 출력하기
const numbers = [1, 2, 3, 4, 5];
// 1)) 2배 증가시켜 새로운 배열로 출력하기
const numberMul = numbers.map(function(element){
  return element * 2;
})

console.log(numberMul);

// 2)) 배열의 길이를 구하고 출력하기
console.log('배열의 길이 : ' + numberMul.length);

// 3) 배열에서 특정 요소를 삭제하기(3) 메소드 사용
console.log('3번인덱스 값 : ' + numberMul[3]);
numberMul.splice(3, 1);
console.log(numberMul);

// 4) 배열에서 특정 값을 검색하고 그 값의 인덱스 출력하기
const animals = ['dog', 'cat', 'rabbit'];
console.log(animals.indexOf('dog'));
console.log(animals.indexOf('cat'));
console.log(animals.indexOf('rabbit'));

// 5) 배열의 첫 번째와 마지막 요소를 제거한 뒤 남은 배열 출력하기
const colors = ['red', 'blue', 'green', 'yellow'];
console.log(colors);

colors.shift();
console.log(colors);

colors.pop();
console.log(colors);

//3. 혼합문제
//1) 배열의 요소를 객체로 변환하여 새로운 배열을 만들기
//  주어진 배열의 값을 객체의 value 속성으로 저장할것
const data = [10, 20, 30];

const value = [];
for(let i=0; i<data.length; i++){
  value[i] = {value: data[i]};
}

console.log(value);

//출력결과 : [{value: 10}, {value: 20}, {value: 30}]

//2) 배열을 활용하여 특정값을 기준으로 객체 업데이트하기
const users = [
  {id : 1, name : "짱구", age : 5, subject : 'javascript'},
  {id : 2, name : "철수", age : 5, subject : 'javascript'},
  {id : 3, name : "맹구", age : 5, subject : 'javascript'}, 
];
//id가 2인 객체의 나이를 6으로 변경, subject를 'web표준'으로 변경

for(let i=0; i<users.length; i++){
  if(users[i].id === 2){
    users[i].id = 6;
    users[i].subject = 'web표준';
  }
}

console.log(users);

//3) 배열의 요소를 모두 더하여 총합 출력하기
const numbers2 = [2, 5, 20, 10];

let sum = 0;

for(let i of numbers2){
  sum += i;
}

console.log(sum)

---------------------------------------------------------------------------------------------------

//1. 나이가 19살 이상이면 입장가능, 19살 미만이면 입장 불가 출력
// 나이가 10살이면 당첨을 출력하고 아니면 다음기회에 출력
// 본인이름, 나이는 상수로 설정, 삼항연산자 사용할 것

//출력결과
// 본인이름님은 00살 입장가능여부는 결과 
// 이벤트 당첨여부
//출력

let name = '길진수';
const age = 27;

console.log(`${name}님은 ${age}살. 입장가능 여부는 :`, age < 19 ? '입장불가' : '입장가능');
console.log('이벤트 당첨 여부 :', age === 10 ? '당첨' : '다음기회에');

//2. 점수가 60점 이상이면 합격, 60점 미만이면 불합격출력
// 점수가 100점이면 장학생, 아니면 일반학생 출력
// 학생이름, 점수는 상수로 설정
const stu1 = '짱구';
const stu2 = '유리';
const stu3 = '진수';

const stu1Scr = 63;
const stu2Scr = 12;
const stu3Scr = 100;

function grade(name, score){
  if(score >= 60){
    console.log(`${name}: 합격`);
  } else {
    console.log(`${name}: 불합격`);
  }

  if(score === 100){
    console.log(`${name}: 장학생`);
  } else {
    console.log(`${name}: 일반학생`);
  }
}

grade(stu1, stu1Scr);
grade(stu2, stu2Scr);
grade(stu3, stu3Scr);

//3. 학생의 이름과 성적을 입력받아서 성적에 따른 학점 출력
// 90점 이상 : A, 80점 이상 : B,  70점이상 : C, 그외 : F
function checkGrade(score){
  if(score >= 90){
    return 'A';
  } else if(score >= 80){
    return 'B';
  } else if(score >= 70){
    return 'C';
  } else {
    return 'F';
  }
}

console.log(checkGrade(100));
console.log(checkGrade(50));
console.log(checkGrade(88));
console.log(checkGrade(70));

//4. 1부터 100까지의 숫자중 3, 6, 9의 배수 합계 출력
let numSum = 0;
for(let i=1; i<=100; i++){
  if(i%3===0 || i%6===0 || i%9===0){
    numSum += i;
  }
}
console.log(numSum);

---------------------------------------------------------------------------------------------
//1. 문자열을 인수로 받아 역순으로 뒤집을 결과를 반환하는 함수
// 콜백을 사용하여 문자열을 역순으로 출력
//함수명 printStr()  매개변수 1개
//함수명 reverseStr() 콜백사용
// 참고 : split(), reverse(), join()

function reverseStr(str, callback){
  callback(str.split('').reverse().join(''));
}

const printStr = function(strArgs){
  console.log(strArgs);
}

reverseStr('길진수', printStr);

//2.  성과 이름을 전달받아서 풀네임을 만든 뒤 000님 환영합니다 출력하기

//함수명 welcomeUser
function welcomeUser(lastName, firstName){
  console.log(`${firstName}${lastName}님 환영합니다`);
}

welcomeUser('진수', '길');

//3. 사용자 나이를 입력후 성인이면 true반환, 아니면 false 반환

//함수명 isAdult
function isAdult(age){
  if(age >= 20){
    return true;
  } else {
    return false;
  }
}

console.log(isAdult(12));
console.log(isAdult(30));

//4. 객체를 사용해 성적관리 프로그램 만들기
//프로그램이 등록되지 않은 학생은 3명이다
//이름 : 둘리, 나이 : 5, 점수 : 80
//이름 : 도우너, 나이 : 6, 점수 : 50
//이름 : 또치, 나이 : 5, 점수 : 90
// 학생마다의 점수 출력하기(이름 점수 같이 출력할 것)
// 3명을 모두 프로그램에 등록시킨다
// 3명의 학생 정보를 학교 객체로 선언 후에 학교 객체에 등록시킨다
console.log('*****성적관리 프로그램*****');

class Student{
  constructor(name, age, score){
    this.name = name;
    this.age = age;
    this.score = score;
  }
}

const stu1 = new Student('둘리', 5, 80);
const stu2 = new Student('도우너', 6, 50);
const stu3 = new Student('또치', 5, 90);

const students = [stu1, stu2, stu3];
console.log(students);

students.forEach(student => {
  console.log(`이름 : ${student.name}, 성적 : ${student.score}`);
})

function School(student){
  this.student = student;
}

const student1 = new School(stu1);
const student2 = new School(stu2);
const student3 = new School(stu3);

const schoolMember = [student1, student2, student3];
console.log(schoolMember);

console.log(schoolMember[1].student.name);

//5. 포인트를 각각 객체에 추가하고 순서대로 point는 80, 50, 90이다
// 포인트를 모두 더한 값을 출력하라.
students[0].point = 80;
students[1].point = 50;
students[2].point = 90;

console.log(schoolMember);

let pointSum = 0;
for(let i in schoolMember){
  pointSum += schoolMember[i].student.point; 
}

console.log(pointSum);